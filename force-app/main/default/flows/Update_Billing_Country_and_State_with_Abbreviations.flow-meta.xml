<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <decisions>
        <name>Start_Conditions</name>
        <label>Start Conditions</label>
        <locationX>446</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Time_Zone_Conditions_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Billing_Country_and_State_are_not_abbreviate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>forBillingCountry</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forBillingState</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_State_Abbreviation</targetReference>
            </connector>
            <label>Billing Country and State are not abbreviate</label>
        </rules>
        <rules>
            <name>Billing_State_is_not_abbreviate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>forBillingState</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_State_Abbreviation_0</targetReference>
            </connector>
            <label>Billing State is not abbreviate</label>
        </rules>
        <rules>
            <name>Billing_Country_is_not_abbreviate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>forBillingCountry</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Country_Abbreviation_0</targetReference>
            </connector>
            <label>Billing Country is not abbreviate</label>
        </rules>
    </decisions>
    <decisions>
        <name>Time_Zone_Conditions_0</name>
        <label>Time Zone Conditions</label>
        <locationX>446</locationX>
        <locationY>839</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Billing_State_is_not_null_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BillingState</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Time_Zone__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Time_Zone</targetReference>
            </connector>
            <label>Billing State is not null</label>
        </rules>
    </decisions>
    <description>Update Billing Country and Billing State with Country Abbreviation and State Abbreviation</description>
    <environments>Default</environments>
    <formulas>
        <name>forBillingCountry</name>
        <dataType>Number</dataType>
        <expression>LEN({!$Record.BillingCountry})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forBillingState</name>
        <dataType>Number</dataType>
        <expression>LEN({!$Record.BillingState})</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>Update Billing Country and State with Abbreviations {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Billing Country and State with Abbreviations</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Country_Abbreviation</name>
        <label>Get Country Abbreviation</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BillingCountry</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Country_Abbreviation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Country_Abbreviation_0</name>
        <label>Get Country Abbreviation</label>
        <locationX>578</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Record_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BillingCountry</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Country_Abbreviation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_State_Abbreviation</name>
        <label>Get State Abbreviation</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Country_Abbreviation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BillingState</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>State_Abbreviation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_State_Abbreviation_0</name>
        <label>Get State Abbreviation</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Record_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BillingState</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>State_Abbreviation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Time_Zone</name>
        <label>Get Time Zone</label>
        <locationX>314</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Time_Zone</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>State_Abbreviation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BillingState</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TimeZone__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Account_Record</name>
        <label>Update Account Record</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Time_Zone_Conditions_0</targetReference>
        </connector>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>Get_Country_Abbreviation.Abbreviation__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>Get_State_Abbreviation.Abbreviation__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_Record_0</name>
        <label>Update Account Record</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>Time_Zone_Conditions_0</targetReference>
        </connector>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>Get_State_Abbreviation_0.Abbreviation__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_Record_0_0</name>
        <label>Update Account Record</label>
        <locationX>578</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>Time_Zone_Conditions_0</targetReference>
        </connector>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>Get_Country_Abbreviation_0.Abbreviation__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Time_Zone</name>
        <label>Update Time Zone</label>
        <locationX>314</locationX>
        <locationY>1055</locationY>
        <inputAssignments>
            <field>Time_Zone__c</field>
            <value>
                <elementReference>Get_Time_Zone.Time_Zone__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Start_Conditions</targetReference>
        </connector>
        <filterFormula>OR(AND(ISNEW(), NOT(ISNULL({!$Record.BillingState})), NOT(ISNULL({!$Record.BillingCountry}))), AND(NOT(ISNULL({!$Record.BillingState})), NOT(ISNULL({!$Record.BillingCountry})), ISCHANGED({!$Record.BillingState}), ISCHANGED({!$Record.BillingCountry})))</filterFormula>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
